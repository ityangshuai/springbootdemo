
#虚拟路径
server.servlet.context-path=/

server.port=1111

server.tomcat.uri-encoding=UTF-8

spring.aop.proxy-target-class=true

#关闭原有的logo，将自己的 favicon.ico 放到src/main/resources/static下
#spring.mvc.favicon.enable=false
spring.favicon.enabled = false

#datasource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/yang?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root

#mybatis
mybatis.type-aliases-package=com.ityangshuai.dao
mybatis.mapper-locations=classpath:mapper/*.xml

#logback输出日志到文件
#logging.file=myLog.log
#logging.path=F:/myLog
#默认扫描logback-spring.xml
#logging.config=classpath:logback-spring.xml
logging.level.com.json=debug

#freemarker
#spring.freemarker.template-loader-path=classpath:/templates/views/
#spring.freemarker.cache=false
#spring.freemarker.charset=UTF-8
#spring.freemarker.check-template-location=true
#spring.freemarker.content-type=text/html
#spring.freemarker.expose-request-attributes=false
#spring.freemarker.expose-session-attributes=false
#spring.freemarker.request-context-attribute=request
#spring.freemarker.suffix=.ftl


# 是否使用缓存，开发阶段最填false，方便使用ctrl+shift+F9 进行重新编译，无需重启服务
spring.thymeleaf.cache=false
# 检查该模板是否存在
spring.thymeleaf.check-template-location=true
# 模板中内容的类型
#spring.thymeleaf.content-type=text/html过时
spring.thymeleaf.servlet.content-type=text/html
# 启动 MVC 对Thymeleaf 视图的解析
spring.thymeleaf.enabled=true
# 模板的字符集
spring.thymeleaf.encoding=UTF-8
# 从解析中排除的视图名称的逗号分隔列表，没有的话就空咯
spring.thymeleaf.excluded-view-names=
# 使用的是什么类型模板
spring.thymeleaf.mode=HTML5
# 在构建URL时可以预览查看名称的前缀。就是路径在哪
spring.thymeleaf.prefix=classpath:/templates/views/
# 在构建URL时附加到视图名称的后缀。就是我们用rest风格，不同加文件后缀名。自己加上去
spring.thymeleaf.suffix=.html